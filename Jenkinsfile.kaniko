pipeline {
  agent any

  // agent {
  //   docker { 
  //     image 'docker:latest'
  //     // args '-v /var/run/docker.sock:/var/run/docker.sock'
  //   }
  // }

  environment {
    DOCKER_ID = credentials('DOCKER_ID')
    DOCKER_PASSWORD = credentials('DOCKER_PASSWORD')
    WORK_DIR = "/var/jenkins_home/workspace/long-test-kaniko/"
    CI_REGISTRY="https://index.docker.io/v1/"
  }

  stages {
    stage('Init') {
      steps {
        echo 'Initializing..'
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
        echo "Current branch: ${env.BRANCH_NAME}"
        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_ID --password-stdin'
      }
    }
    stage('Build') {
      steps {
        echo 'Building image..'
        // sh 'pwd'
        // sh 'ls -la /var/jenkins_home/workspace/long-test-kaniko/'
        // sh 'ls -la /var/jenkins_home/workspace/long-test-kaniko/reactjs/'
        // sh 'cat /var/jenkins_home/workspace/long-test-kaniko/reactjs/Dockerfile'
        // sh """
        //   cd /var/jenkins_home/workspace/long-test-kaniko/reactjs/
        //   docker run \
        //     -v /var/jenkins_home/workspace/long-test-kaniko/reactjs/:/workspace \
        //     gcr.io/kaniko-project/executor:latest \
        //     --destination $DOCKER_ID/cotu-kaniko:latest
        // """
        sh 'pwd'
        sh 'ls -la'
        sh """
          docker build -t kaniko-executor -f Dockerfile.kaniko .
          docker images

          docker run --rm --name=kaniko-executor -v $WORK_DIR:/workspace/ kaniko-executor --customPlatform=linux/arm64 --force --dockerfile=Dockerfile --destination=longersoft/kaniko-multi-arch-arm64:latest --no-push --tarPath=/workspace/file-kaniko-multi-arch-arm64.tar
          docker run --rm --name=kaniko-executor -v $WORK_DIR:/workspace/ kaniko-executor --customPlatform=linux/amd64 --destination longersoft/kaniko-multi-arch-amd64:latest --no-push --tarPath=/workspace/file-kaniko-multi-arch-amd64.tar

          ls -la
          docker rmi -f longersoft/kaniko-multi-arch-arm64:latest
          docker load < file-kaniko-multi-arch-arm64.tar
          docker rmi -f longersoft/kaniko-multi-arch-amd64:latest
          docker load < file-kaniko-multi-arch-amd64.tar

          docker images
        """
      }
    }
    stage('Test') {
      steps {
        echo 'Testing..'
        // sh 'docker run --rm -e CI=true $DOCKER_ID/cotu pytest'
      }
    }
    stage('Publish') {
      // agent {
      //   docker {
      //     image 'ezkrg/buildx:v0.8.1'
      //   }
      // }
      steps {
        echo 'Building and publishing multi-arch image to DockerHub..'
        sh """
          docker push longersoft/kaniko-multi-arch-arm64:latest
          docker push longersoft/kaniko-multi-arch-amd64:latest
          docker manifest create longersoft/kaniko-multi-arch:latest \
            --amend longersoft/kaniko-multi-arch-arm64:latest \
            --amend longersoft/kaniko-multi-arch-amd64:latest
          docker manifest push longersoft/kaniko-multi-arch:latest
        """
      }
    }
    stage('Cleanup') {
      steps {
        echo 'Removing unused docker containers and images..'
        // sh 'docker container prune -f'
        // sh 'docker rmi -f $(docker images -aq)'
        // sh 'docker ps -aq | xargs --no-run-if-empty docker rm'
        // // keep intermediate images as cache, only delete the final image
        // sh 'docker images -q | xargs --no-run-if-empty docker rmi'
        // sh 'docker kill $(docker ps -q)'
        // sh 'docker rm $(docker ps -a -q)'
        // sh 'docker rmi $(docker images -q)'
      }
    }
  }
}
